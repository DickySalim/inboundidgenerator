<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>WhatsApp Button Generator</title>
    <style>
        /* Minimalistic styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .container {
            background-color: #fff;
            padding: 20px 30px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            max-width: 600px;
            width: 100%;
        }

        /* Headline and Subtitle */
        .container h1 {
            margin-bottom: 10px;
            font-size: 24px;
            text-align: center;
        }

        .container h2 {
            margin-bottom: 20px;
            font-size: 16px;
            font-weight: normal;
            color: #666;
            text-align: center;
        }

        .field-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        input[type="text"] {
            width: 100%;
            padding: 8px 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        #generate-btn {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            background-color: #25D366;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 20px; /* Added margin to prevent overlap */
        }

        #generate-btn:hover {
            background-color: #1ebe5b;
        }

        .output-container {
            margin-top: 20px;
            position: relative;
        }

        #copy-btn {
            position: absolute;
            top: -40px;
            right: 0;
            padding: 6px 10px;
            font-size: 14px;
            background-color: #ccc; /* Changed color to gray */
            color: #000;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        #copy-btn:hover {
            background-color: #bbb;
        }

        #output-code {
            width: 100%;
            height: 300px;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            overflow-y: scroll;
            white-space: pre;
            background-color: #f9f9f9;
            font-family: Consolas, monospace;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Generate Inbound ID Button</h1>
        <h2>Kode Inbound yang di generate masih random, belum ada rumus. Untuk proof of concept dulu aja</h2>
        <div class="field-group">
            <label for="click-id">Click ID</label>
            <input type="text" id="click-id" placeholder="Enter Click ID">
        </div>
        <div class="field-group">
            <label for="greetings">Greetings</label>
            <input type="text" id="greetings" placeholder="Enter Greetings Message">
        </div>
        <button id="generate-btn">Generate</button>
        <div class="output-container">
            <button id="copy-btn">Copy</button>
            <textarea id="output-code" readonly></textarea>
        </div>
    </div>

    <script>
        const generateBtn = document.getElementById('generate-btn');
        const copyBtn = document.getElementById('copy-btn');
        const outputCode = document.getElementById('output-code');

        const escapeHTML = (str) => {
            return str.replace(/&/g, '&amp;')
                      .replace(/</g, '&lt;')
                      .replace(/>/g, '&gt;')
                      .replace(/"/g, '&quot;')
                      .replace(/'/g, '&#039;');
        };

        const templateCode = (clickId, greetings) => {
            const escapedGreetings = greetings.replace(/\\/g, '\\\\').replace(/`/g, '\\`').replace(/\$/g, '\\$').replace(/'/g, '\\\'').replace(/"/g, '\\"');
            return `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>WhatsApp Button</title>
    <style>
        /* CSS content remains the same */
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
        }

        .whatsapp-button {
            font-weight: 700;
            background: linear-gradient(145deg, #1ebe5b, #25D366, #1ebe5b);
            color: white;
            border: none;
            padding: 8px 16px;
            text-align: center;
            text-decoration: none;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            width: 100%;
            max-width: 260px;
            margin: 0 auto;
        }

        .whatsapp-logo {
            width: 35px;
            height: 35px;
            margin-right: 8px;
        }

        .text-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .subtitle {
            font-weight: 300;
            font-size: 12px;
            color: #f5f5f5;
            margin-top: -2px;
        }

        .button-container {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
        }

        @keyframes zoomInOut {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .whatsapp-button.animate {
            animation: zoomInOut 2s cubic-bezier(0.45, 0, 0.55, 1) 0.5s forwards;
        }
    </style>
</head>
<body>
    <div class="button-container">
        <button class="whatsapp-button" id="${clickId}">
            <img src="https://upload.wikimedia.org/wikipedia/commons/5/5e/WhatsApp_icon.png" class="whatsapp-logo" alt="WhatsApp Logo">
            <div class="text-container">
                <div>Chat via WhatsApp</div>
                <div class="subtitle">Klik disini</div>
            </div>
        </button>
    </div>

    <script>
        function generateUniqueInboundID() {
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            let inboundID = '';
            for (let i = 0; i < 5; i++) {
                inboundID += characters.charAt(Math.floor(Math.random() * characters.length));
            }
            return inboundID;
        }

        function generateWhatsAppURL(inboundID) {
            const message = '${escapedGreetings}\\n\\nKode Unik Pelanggan *' + inboundID + '*, _Jangan Hapus Kode Unik Anda_';
            const phoneNumber = "6282289777177";
            return 'https://wa.me/' + phoneNumber + '?text=' + encodeURIComponent(message);
        }

        // Event listener to detect button click and open WhatsApp link
        document.getElementById('${clickId}').addEventListener('click', function (event) {
            const inboundID = generateUniqueInboundID();
            const whatsappURL = generateWhatsAppURL(inboundID);

            // Push to dataLayer with actual element id as 'gtm.elementId'
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({
                event: 'gtm.click',
                inboundID: inboundID,
                'gtm.elementId': event.currentTarget.id
            });

            window.open(whatsappURL, '_blank');
        });

        function isElementInViewport(el) {
            const rect = el.getBoundingClientRect();
            return (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth)
            );
        }

        function handleScroll() {
            const button = document.getElementById('${clickId}');
            if (isElementInViewport(button) && !button.classList.contains('animated')) {
                button.classList.add('animate', 'animated');
            }
        }

        window.addEventListener('scroll', handleScroll);
        window.addEventListener('load', handleScroll);

        // Check if dataLayer is accessible
        window.addEventListener('load', function() {
            if (typeof window.dataLayer === 'undefined') {
                console.warn('DataLayer is not accessible on page load. This may cause issues with tracking.');
            } else {
                console.log('DataLayer is accessible.');
            }
        });
    <\/script>
</body>
</html>`;
        };

        generateBtn.addEventListener('click', () => {
            const clickId = document.getElementById('click-id').value.trim() || 'tombolkonsul';
            const greetings = document.getElementById('greetings').value.trim() || 'Halo, saya mau pesan mGanik Metafiber, boleh di bantu?';
            const code = templateCode(clickId, greetings);
            outputCode.value = code;
        });

        copyBtn.addEventListener('click', () => {
            outputCode.select();
            document.execCommand('copy');
            alert('Code copied to clipboard!');
        });
    </script>
</body>
</html>
